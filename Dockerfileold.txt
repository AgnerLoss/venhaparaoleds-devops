# Stage 1: Build
FROM cgr.dev/chainguard/python:latest-dev as builder
WORKDIR /app

# Copiar o arquivo de dependências
COPY requirements.txt .

# Criar um ambiente virtual e instalar as dependências
RUN python3 -m venv /app/venv && \
    /app/venv/bin/pip install --no-cache-dir -r requirements.txt

# Copiar o código-fonte e os arquivos de dados
COPY . .

# Stage 2: Run
FROM cgr.dev/chainguard/python:latest
WORKDIR /app

# Copiar apenas as dependências necessárias
COPY --from=builder /app/venv/lib/python3.13/site-packages /app/venv/lib/python3.13/site-packages
COPY --from=builder /app/venv /app/venv
COPY --from=builder /app/requirements.txt /app/
COPY --from=builder /app/src/templates /app/src/templates
COPY --from=builder /app/src /app/src
COPY --from=builder /app/src/app.py /app/src/app.py



# Configurar o PATH para usar o ambiente virtual
ENV PATH="/app/venv/bin:$PATH"

# Configurar o ambiente Flask corretamente
ENV FLASK_APP=src/app.py
ENV FLASK_ENV=production

# Expor a porta do Flask
EXPOSE 5000

# Definir o comando padrão para rodar o Flask
ENTRYPOINT ["python", "/app/src/app.py"]
